version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: mysql://${MYSQL_USER:-dbadmin}:${MYSQL_PASSWORD:-yhm86LRDXaonNM}@recruitment-tests-dev.ci7jgzfkdumb.eu-west-1.rds.amazonaws.com:3306/${MYSQL_DB:-recruitmenttestsdevs}?serverVersion=${MYSQL_VERSION:-8}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-51.254.125.26,127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}

      TRUSTED_HOSTS: ^${SERVER_NAME:-localhost|whitehat\.local|whitehat\.test}|caddy$$
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost,whitehat.local}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-whitehatgaming!!!}

  pwa:
    build:
      context: ./pwa
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy
      NEXT_PUBLIC_ENTRYPOINT: http://caddy

  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - php
      - pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, whitehat.local, whitehat.test:80, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-whitehatgaming!!!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-whitehatgaming!!!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  database:
    #image: postgres:${POSTGRES_VERSION:-13}-alpine
    image: mysql:${MYSQL_VERSION:-8.0.23}
    command: --default-authentication-plugin=mysql_native_password
      #restart: always
    environment:
      #- POSTGRES_DB=${POSTGRES_DB:-api}
      # You should definitely change the password in production
      #- POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
      #- POSTGRES_USER=${POSTGRES_USER:-api-platform}
      - MYSQL_DB=${MYSQL_DB:-recruitmenttestsdevs}
      - MYSQL_USER=${MYSQL_USER:-dbadmin}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-yhm86LRDXaonNM}
    ports:
      - target: 3306
        published: 3306
        protocol: tcp  
    volumes:
      #- db_data:/var/lib/postgresql/data:rw
      - db_data:/var/lib/mysql
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
###> doctrine/doctrine-bundle ###
  db_data:
###< doctrine/doctrine-bundle ###
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
